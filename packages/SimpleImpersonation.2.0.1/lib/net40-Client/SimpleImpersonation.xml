<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleImpersonation</name>
    </assembly>
    <members>
        <member name="T:SimpleImpersonation.Impersonation">
            <summary>
            Impersonates a specific user for the lifetime of this object.
            </summary>
        </member>
        <member name="M:SimpleImpersonation.Impersonation.LogonUser(System.String,System.String,System.String,SimpleImpersonation.LogonType)">
            <summary>
            Attempts to impersonate the user with the supplied information.
            Call from a <c>using</c> block, or ensure that <see cref="M:SimpleImpersonation.Impersonation.Dispose"/> is called on
            the resulting <see cref="T:SimpleImpersonation.Impersonation"/> object upon completion.
            </summary>
            <param name="domain">The domain name or machine name, or <c>.</c> for the local machine.</param>
            <param name="username">The user name.</param>
            <param name="password">The password.</param>
            <param name="logonType">The logon type.</param>
            <returns>An <see cref="T:SimpleImpersonation.Impersonation"/> object, which should be disposed when done impersonating the user.</returns>
        </member>
        <member name="M:SimpleImpersonation.Impersonation.LogonUser(System.String,System.String,System.Security.SecureString,SimpleImpersonation.LogonType)">
            <summary>
            Attempts to impersonate the user with the supplied information.
            Call from a <c>using</c> block, or ensure that <see cref="M:SimpleImpersonation.Impersonation.Dispose"/> is called on
            the resulting <see cref="T:SimpleImpersonation.Impersonation"/> object upon completion.
            </summary>
            <param name="domain">The domain name or machine name, or <c>.</c> for the local machine.</param>
            <param name="username">The user name.</param>
            <param name="password">The password, as a <see cref="T:System.Security.SecureString"/>.</param>
            <param name="logonType">The logon type.</param>
            <returns>An <see cref="T:SimpleImpersonation.Impersonation"/> object, which should be disposed when done impersonating the user.</returns>
        </member>
        <member name="M:SimpleImpersonation.Impersonation.Dispose">
            <summary>
            Disposes the <see cref="T:SimpleImpersonation.Impersonation"/> object, ending impersonation and restoring the original user.
            </summary>
        </member>
        <member name="T:SimpleImpersonation.ImpersonationException">
            <summary>
            Exception thrown when impersonation fails.
            </summary>
            <remarks>
            Inherits from <see cref="T:System.ApplicationException"/> for backwards compatibility reasons.
            </remarks>
        </member>
        <member name="M:SimpleImpersonation.ImpersonationException.#ctor(System.ComponentModel.Win32Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SimpleImpersonation.ImpersonationException"/> class from a specific <see cref="T:System.ComponentModel.Win32Exception"/>.
            </summary>
            <param name="win32Exception">The exception to base this exception on.</param>
        </member>
        <member name="P:SimpleImpersonation.ImpersonationException.ErrorCode">
            <summary>
            Returns the Win32 error code handle for the exception.
            </summary>
        </member>
        <member name="P:SimpleImpersonation.ImpersonationException.NativeErrorCode">
            <summary>
            Returns the Win32 native error code for the exception.
            </summary>
        </member>
        <member name="T:SimpleImpersonation.LogonType">
            <summary>
            Specifies the type of login used.
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa378184.aspx
            </summary>
        </member>
        <member name="F:SimpleImpersonation.LogonType.Interactive">
            <summary>
            This logon type is intended for users who will be interactively using the computer, such as a user being logged
            on by a terminal server, remote shell, or similar process. This logon type has the additional expense of caching
            logon information for disconnected operations; therefore, it is inappropriate for some client/server applications,
            such as a mail server.
            </summary>
        </member>
        <member name="F:SimpleImpersonation.LogonType.Network">
            <summary>
            This logon type is intended for high performance servers to authenticate plaintext passwords.
            The LogonUser function does not cache credentials for this logon type.
            </summary>
        </member>
        <member name="F:SimpleImpersonation.LogonType.Batch">
            <summary>
            This logon type is intended for batch servers, where processes may be executing on behalf of a user
            without their direct intervention. This type is also for higher performance servers that process many
            plaintext authentication attempts at a time, such as mail or web servers.
            </summary>
        </member>
        <member name="F:SimpleImpersonation.LogonType.Service">
            <summary>
            Indicates a service-type logon. The account provided must have the service privilege enabled. 
            </summary>
        </member>
        <member name="F:SimpleImpersonation.LogonType.Unlock">
            <summary>
            GINAs are no longer supported.
            Windows Server 2003 and Windows XP:  This logon type is for GINA DLLs that log on users who will be
            interactively using the computer. This logon type can generate a unique audit record that shows when
            the workstation was unlocked.
            </summary>
        </member>
        <member name="F:SimpleImpersonation.LogonType.NetworkCleartext">
            <summary>
            This logon type preserves the name and password in the authentication package, which allows the server
            to make connections to other network servers while impersonating the client. A server can accept plaintext
            credentials from a client, call LogonUser, verify that the user can access the system across the network,
            and still communicate with other servers.
            </summary>
        </member>
        <member name="F:SimpleImpersonation.LogonType.NewCredentials">
            <summary>
            This logon type allows the caller to clone its current token and specify new credentials for outbound connections.
            The new logon session has the same local identifier but uses different credentials for other network connections.
            This logon type is supported only by the LOGON32_PROVIDER_WINNT50 logon provider.
            </summary>
        </member>
    </members>
</doc>
